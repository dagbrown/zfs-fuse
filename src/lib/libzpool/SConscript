Import('env')

BuildDir('build-user', '.')
BuildDir('build-kernel', '.')

objects = Split('arc.c bplist.c dbuf.c dnode_sync.c dmu.c dmu_object.c dmu_objset.c dmu_traverse.c dmu_tx.c dmu_zfetch.c dnode.c dsl_dataset.c dsl_dir.c dsl_pool.c dsl_prop.c dsl_synctask.c fletcher.c lzjb.c metaslab.c refcount.c sha256.c spa.c spa_config.c spa_errlog.c spa_history.c spa_misc.c space_map.c txg.c uberblock.c unique.c util.c vdev.c vdev_cache.c vdev_file.c vdev_label.c vdev_mirror.c vdev_missing.c vdev_queue.c vdev_raidz.c vdev_root.c zap.c zap_leaf.c zap_micro.c zfs_byteswap.c zfs_fm.c zil.c zio.c zio_checksum.c zio_compress.c zio_inject.c')

objects_user = ['build-user/' + o for o in objects] + Split('build-user/kernel.c build-user/taskq.c')
objects_kernel = ['build-kernel/' + o for o in objects]

cpppath_common = Split('#lib/libavl/include #lib/libnvpair/include #lib/libzfscommon/include #lib/libumem/include')
cpppath_user = cpppath_common + Split('./include #lib/libsolcompat/include')
cpppath_kernel = cpppath_common + ['#lib/libsolkerncompat/include']

ccflags_kernel = ['-D_KERNEL']

env.StaticLibrary('libzpool-user', objects_user, CPPPATH = env['CPPPATH'] + cpppath_user)
env.StaticLibrary('libzpool-kernel', objects_kernel, CPPPATH = env['CPPPATH'] + cpppath_kernel, CCFLAGS = env['CCFLAGS'] + ccflags_kernel)
